<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.MockConfigurationMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.models.MockConfiguration">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="mock_url" jdbcType="VARCHAR" property="mockUrl" />
    <result column="mock_name" jdbcType="VARCHAR" property="mockName" />
    <result column="get_reqheader" jdbcType="VARCHAR" property="getReqheader" />
    <result column="get_reqbody" jdbcType="VARCHAR" property="getReqbody" />
    <result column="get_req_type" jdbcType="INTEGER" property="getReqType" />

  </resultMap>
  <sql id="Base_Column_List">
    id, mock_url, mock_name, get_reqheader, get_reqbody, get_req_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mock_configuration
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByMockUrl" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from my_test.mock_configuration
    where mock_url = #{mockUrl,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mock_configuration
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.models.MockConfiguration">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mock_configuration (mock_url, mock_name, get_reqheader, 
      get_reqbody)
    values (#{mockUrl,jdbcType=VARCHAR}, #{mockName,jdbcType=VARCHAR}, #{getReqheader,jdbcType=VARCHAR}, 
      #{getReqbody,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.models.MockConfiguration">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mock_configuration
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mockUrl != null">
        mock_url,
      </if>
      <if test="mockName != null">
        mock_name,
      </if>
      <if test="getReqheader != null">
        get_reqheader,
      </if>
      <if test="getReqbody != null">
        get_reqbody,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mockUrl != null">
        #{mockUrl,jdbcType=VARCHAR},
      </if>
      <if test="mockName != null">
        #{mockName,jdbcType=VARCHAR},
      </if>
      <if test="getReqheader != null">
        #{getReqheader,jdbcType=VARCHAR},
      </if>
      <if test="getReqbody != null">
        #{getReqbody,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.models.MockConfiguration">
    update mock_configuration
    <set>
      <if test="mockUrl != null">
        mock_url = #{mockUrl,jdbcType=VARCHAR},
      </if>
      <if test="mockName != null">
        mock_name = #{mockName,jdbcType=VARCHAR},
      </if>
      <if test="getReqheader != null">
        get_reqheader = #{getReqheader,jdbcType=VARCHAR},
      </if>
      <if test="getReqbody != null">
        get_reqbody = #{getReqbody,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.models.MockConfiguration">
    update mock_configuration
    set mock_url = #{mockUrl,jdbcType=VARCHAR},
      mock_name = #{mockName,jdbcType=VARCHAR},
      get_reqheader = #{getReqheader,jdbcType=VARCHAR},
      get_reqbody = #{getReqbody,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>